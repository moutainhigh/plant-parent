<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moguying.plant.backend.farmer.dao.FarmerNoticeDAO">
  <resultMap id="BaseResultMap" type="com.moguying.plant.api.farmer.dto.FarmerNotice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, message, `state`, add_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from plant_farmer_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from plant_farmer_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.moguying.plant.api.farmer.dto.FarmerNotice">
    insert into plant_farmer_notice (id, user_id, message, 
      `state`, add_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.moguying.plant.api.farmer.dto.FarmerNotice">
    insert into plant_farmer_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.moguying.plant.api.farmer.dto.FarmerNotice">
    update plant_farmer_notice
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.moguying.plant.api.farmer.dto.FarmerNotice">
    update plant_farmer_notice
    set user_id = #{userId,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="countNewNotice" resultType="int">
    select count(*) from plant_farmer_notice
    <where>
      <if test="userId != null">
        user_id = #{userId}
      </if>
      <if test="state != null">
        AND state = #{state}
      </if>
    </where>
  </select>
  
  <select id="selectSelective" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from plant_farmer_notice
    <where>
      <if test="userId != null">
        user_id = #{userId}
      </if>
      <if test="state != null">
      AND state = #{state}
      </if>
    </where>
    order by add_time desc
  </select>

  <update id="updateStateByUserId">
    update plant_farmer_notice
    set state = #{state}
    where user_id = #{userId}
  </update>
</mapper>