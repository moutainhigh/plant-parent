<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moguying.plant.core.dao.bargain.BargainDetailDao">

    <!-- 基本字段映射 -->
    <resultMap id="BaseResultMap" type="com.moguying.plant.core.entity.bargain.BargainDetail">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="product_id" property="productId"/>
        <result column="product_count" property="productCount"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="bargain_amount" property="bargainAmount"/>
        <result column="left_amount" property="leftAmount"/>
        <result column="total_count" property="totalCount"/>
        <result column="bargain_count" property="bargainCount"/>
        <result column="state" property="state"/>
        <result column="add_time" property="addTime"/>
        <result column="bargain_time" property="bargainTime"/>
        <result column="close_time" property="closeTime"/>
        <result column="symbol" property="symbol"/>
        <result column="order_number" property="orderNumber"/>
        <result column="reserve_amount" property="reserveAmount"/>
    </resultMap>

    <!-- 基本查询字段 -->
    <sql id="BaseColumnList">
        id, user_id, product_id, product_count, total_amount, bargain_amount, left_amount,
        total_count, bargain_count, state, add_time, bargain_time, close_time, symbol, order_number, reserve_amount
    </sql>

    <!-- 用户砍价详情 -->
    <select id="getOneByOpen" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from plant_bargain_detail
        <where>
            user_id = #{userId}
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            and unix_timestamp(add_time) &lt; unix_timestamp()
            and unix_timestamp(close_time) &gt; unix_timestamp()
        </where>
    </select>

    <!-- 用户砍价详情 -->
    <select id="getOneByClose" resultMap="BaseResultMap">
        select t1.*
        from plant_bargain_detail t1
        left join plant_mall_order t2 on t1.order_number = t2.order_number
        <where>
            t1.user_id = #{userId}
            <if test="productId != null">
                and t1.product_id = #{productId}
            </if>
            <if test="state != null">
                and t1.state = #{state}
            </if>
            and t2.state = 0
        </where>
    </select>

    <!-- 砍价成功记录(所有用户) -->
    <select id="successLogs" resultType="com.moguying.plant.core.entity.bargain.vo.BargainVo">
        select t3.phone `phone`, t4.name `productName`, t1.product_count `productCount`, t1.total_amount `productPrice`
        from plant_bargain_detail t1
        left join plant_mall_order t2 on t1.order_number = t2.order_number
        left join plant_user t3 on t2.user_id = t3.id
        left join plant_mall_product t4 on t1.product_id = t4.id
        <where>
            t2.state = 1
        </where>
        order by t2.pay_time desc
    </select>

    <!-- 送出商品数量 -->
    <select id="sendNumber" resultType="com.moguying.plant.core.entity.bargain.vo.SendNumberVo">
        select t1.product_id `productId`, sum(t1.product_count) `productCount`
        from plant_bargain_detail t1
        left join plant_mall_order t2 on t1.order_number = t2.order_number
        where t2.state = 1
        group by t1.product_id
    </select>

    <!-- 砍价成功人数 -->
    <select id="getNumber" resultType="java.lang.Integer">
        select count(t2.id)
        from plant_bargain_detail t1
        left join plant_mall_order t2 on t1.order_number = t2.order_number
        <where>
            t2.state = 1
            and t1.product_id = #{productId}
        </where>
    </select>

    <!-- 砍价进行中的成品列表 -->
    <select id="doingList" resultType="com.moguying.plant.core.entity.bargain.vo.BargainVo">
        select t1.id `orderId`, t2.name `productName`, t1.bargain_amount `bargainAmount`, t1.left_amount `leftAmount`,
        t2.summary_desc `productInfo`, t2.pic_url `picUrl`, t1.add_time `beginTime`, t1.close_time `endTime`,
        t1.total_amount `totalAmount`, t2.id `productId`, t1.user_id `userId`,t1.symbol
        from plant_bargain_detail t1
        left join plant_mall_product t2 on t1.product_id = t2.id
        <where>
            <if test="userId != null">
                t1.user_id = #{userId}
            </if>
            and t1.state = 0
            and unix_timestamp(t1.add_time) &lt; unix_timestamp()
            and unix_timestamp(t1.close_time) &gt; unix_timestamp()
        </where>
        group by t1.id
    </select>

    <!-- 砍价成功记录 -->
    <select id="ownLog" resultType="com.moguying.plant.core.entity.bargain.vo.BargainVo">
        select t2.id `id`, t3.name `productName`, t3.summary_desc `productInfo`, t3.pic_url `picUrl`, t2.add_time
        `endTime`, t3.id `productId`, t1.id `orderId`
        from plant_bargain_detail t1
        left join plant_mall_order t2 on t1.order_number = t2.order_number
        left join plant_mall_product t3 on t1.product_id = t3.id
        <where>
            t2.user_id = #{userId}
        </where>
        order by t2.add_time desc
    </select>

    <!-- 砍价成功的订单 -->
    <select id="submitOrder" resultType="com.moguying.plant.core.entity.mall.MallOrder">
        select t1.*
        from plant_mall_order t1
        left join plant_bargain_detail t2 on t1.order_number = t2.order_number
        <where>
            t1.state = 0
            and t2.user_id = #{userId}
            and t2.product_id = #{productId}
            and t2.state = 1
            and unix_timestamp(t2.add_time) &lt; unix_timestamp()
            and unix_timestamp(t2.close_time) &gt; unix_timestamp()
        </where>
    </select>

    <!-- 砍价详情ids -->
    <select id="getAllId" resultType="java.lang.Integer">
        select id
        from plant_bargain_detail
        where product_id = #{productId} and state = 0
    </select>

    <!-- 砍价成功后的订单ids -->
    <select id="getOrderIds" resultType="java.lang.Integer">
        select t2.id
        from plant_bargain_detail t1
        left join plant_mall_order t2 on t1.order_number = t2.order_number
        <where>
            t1.product_id = #{productId}
            and t2.state = 0
        </where>
    </select>

    <!-- 批量关单 -->
    <update id="setState">
        update plant_bargain_detail set state = 1
        <where>
            id in
            <foreach item="id" collection="idList" separator="," open="(" close=")">
                #{id}
            </foreach>
        </where>
    </update>

    <select id="bargainList" resultType="com.moguying.plant.core.entity.bargain.vo.BackBargainDetailVo">
        select t1.id `orderId`, t4.phone `phone`, t5.name `productName`, t1.total_amount `productPrice`,
        t1.bargain_amount `bargainPrice`, t1.total_count `bargainCount`, t1.bargain_count `bargainNumber`,
        t1.close_time `closeTime`, t6.detail_address `address`, t3.state `state`, t1.add_time `addTime`,
        t1.bargain_time `bargainTime`, t5.add_time `productTime`
        from plant_bargain_detail t1
        left join plant_bargain_log t2 on t1.id = t2.detail_id
        left join plant_mall_order t3 on t1.order_number = t3.order_number
        left join plant_user t4 on t1.user_id = t4.id
        left join plant_mall_product t5 on t1.product_id = t5.id
        left join plant_user_address t6 on t3.address_id = t6.id
        left join plant_bargain_rate t7 on t1.product_id = t7.product_id
        <where>
            <if test="bargain != null">
                <if test="bargain.phone != null">
                    t4.phone = #{bargain.phone}
                </if>
                <if test="bargain.productName != null">
                    and instr(t5.name, #{bargain.productName})
                </if>
                <if test="bargain.beginTime != null">
                    and unix_timestamp(t7.add_time) &gt;= unix_timestamp(#{bargain.beginTime})
                </if>
                <if test="bargain.endTime != null">
                    and unix_timestamp(t1.bargain_time) &lt;= unix_timestamp(#{bargain.endTime})
                </if>
                <if test="bargain.state != null and bargain.state == 0">
                    and t3.state = 0
                </if>
                <if test="bargain.state != null and bargain.state != 0">
                    and t3.state &gt;= 1
                </if>
            </if>
        </where>
        group by t1.id
        order by (t1.bargain_amount / t1.total_amount) desc
    </select>

</mapper>